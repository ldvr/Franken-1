% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Franken_Core_git.R
\name{ReadInputfrkn}
\alias{ReadInputfrkn}
\title{Read fcs-files, flowframes, data tables or data frames}
\usage{
ReadInputfrkn(
  input,
  pattern = ".fcs",
  compensate = FALSE,
  spillover = NULL,
  transform = FALSE,
  toTransform = NULL,
  transformFunction = flowCore::logicleTransform(),
  scale = FALSE,
  scaled.center = TRUE,
  scaled.scale = TRUE,
  silent = FALSE
)
}
\arguments{
\item{input}{a flowFrame, a flowSet or an array of paths to files 
or directories or a data table or data frame}

\item{pattern}{if input is an array of file- or directorynames, 
select only files containing pattern}

\item{compensate}{logical, does the data need to be compensated}

\item{spillover}{spillover matrix to compensate with
If \code{NULL} and compensate=\code{TRUE}, we will
look for \code{$SPILL} description in fcs file.}

\item{transform}{logical, does the data need to be transformed}

\item{toTransform}{column names or indices that need to be transformed.
If \code{NULL} and transform=\code{TRUE}, column names
of \code{$SPILL} description in fcs file will be used.}

\item{transformFunction}{Defaults to logicleTransform()}

\item{scale}{logical, does the data needs to be rescaled}

\item{scaled.center}{see \code{\link{scale}}}

\item{scaled.scale}{see \code{\link{scale}}}

\item{silent}{if \code{TRUE}, no progress updates will be printed}
}
\value{
flowSOM object containing the data, which can be used as input
for the BuildSOM function
}
\description{
modified readinput function from flowSOM 
for cases where data is not in fcs format but a data.table/frame
}
\details{
Take some input and return flowSOM object containing a matrix with 
the preprocessed data (compensated, transformed, scaled)
}
\examples{
# Read from file
fileName <- system.file("extdata", "68983.fcs", package="flowSOM")
flowSOM.res <- ReadInputfrkn(fileName, compensate=TRUE,transform=TRUE,
                         scale=TRUE)

# Or read from flowFrame object
ff <- flowCore::read.FCS(fileName)
ff <- flowCore::compensate(ff,ff@description$SPILL)
ff <- flowCore::transform(ff,
                 flowCore::transformList(colnames(ff@description$SPILL),
                                 flowCore::logicleTransform()))
flowSOM.res <- ReadInput(ff,scale=TRUE)
 
}
\seealso{
\code{\link{scale}},\code{\link{BuildSOM}}
}
